{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Academic Work \u00b6 Posts \u00b6 Blog posts and guides in the sidebar or through site search","title":"Home"},{"location":"#academic-work","text":"","title":"Academic Work"},{"location":"#posts","text":"Blog posts and guides in the sidebar or through site search","title":"Posts"},{"location":"about/","text":"About Me \u00b6 I enjoy full stack development, and data science/analytics/engineering. Tools I use \u00b6 OS: Ubuntu Shell: Zsh Oh my zsh : Zsh plugin Manager starship : Customized Shell prompt Terminal Multiplexer: Tmux Oh my tmux : tmux config presets tmux cheatsheet : tmux hotkey lookup CLI utilities ripgrep : replacement for grep ; 10-20x faster exa : modern ls replacement bat ): enhanced cat clone htop : enhanced top replacement dust : More intuitive du replacement procs : Modern ps replacement Command-Line Editor: neovim spacevim : ide-like config presets, plugin management IDE's vscode : General-purpose pycharm : Python-centric webstorm : Javascript-centric","title":"About"},{"location":"about/#about-me","text":"I enjoy full stack development, and data science/analytics/engineering.","title":"About Me"},{"location":"about/#tools-i-use","text":"OS: Ubuntu Shell: Zsh Oh my zsh : Zsh plugin Manager starship : Customized Shell prompt Terminal Multiplexer: Tmux Oh my tmux : tmux config presets tmux cheatsheet : tmux hotkey lookup CLI utilities ripgrep : replacement for grep ; 10-20x faster exa : modern ls replacement bat ): enhanced cat clone htop : enhanced top replacement dust : More intuitive du replacement procs : Modern ps replacement Command-Line Editor: neovim spacevim : ide-like config presets, plugin management IDE's vscode : General-purpose pycharm : Python-centric webstorm : Javascript-centric","title":"Tools I use"},{"location":"2019/oracle_12c_docker/","text":"Oracle Database on Docker \u00b6 How-to run Oracle Database Enterprise 12c from a Docker container \u00b6 Host Machine used for testing: OS: Ubuntu 19.10 Platform: x64 Shell: Zsh Prerequisites: \u00b6 Dockerhub account(Free) Create account Docker installed Instructions Check Docker installed correctly 1 docker --version Should output something like: \u00b6 Docker version 19.03.2, build 6a30dfca03 Login to your DockerHub from CLI 1 docker login Should launch a webrowser to auhenticate your CLI session \u00b6 Pull the Oracle Docker Image \u00b6 Oracle is very strict about it's licensing which is why the Dockerhub account is required. Navigate to https://hub.docker.com/_/oracle-database-enterprise-edition . Click the Proceed To Checkout You'll be prompted to login to Dockerhub if you're not already Carefully read and accept the license(s) if you agree to them. After agreeing to the licenses, you'll be redirected to a page that has the docker pull command to get the image and some setup instructions. Ignore the setup instructions for now and pull the Docker image Pull the Docker Image This is the command at the time of writing \u00b6 1 docker pull store/oracle/database-enterprise:12.2.0.1 Verify you have the image 1 docker images | grep oracle store/oracle/database-enterprise 12.2.0.1 12a359cd0528 2 years ago 3.44GB","title":"Guide: Oracle 12c on Docker"},{"location":"2019/oracle_12c_docker/#oracle-database-on-docker","text":"","title":"Oracle Database on Docker"},{"location":"2019/oracle_12c_docker/#how-to-run-oracle-database-enterprise-12c-from-a-docker-container","text":"Host Machine used for testing: OS: Ubuntu 19.10 Platform: x64 Shell: Zsh","title":"How-to run Oracle Database Enterprise 12c from a Docker container"},{"location":"2019/oracle_12c_docker/#prerequisites","text":"Dockerhub account(Free) Create account Docker installed Instructions Check Docker installed correctly 1 docker --version","title":"Prerequisites:"},{"location":"2019/oracle_12c_docker/#should-output-something-like","text":"Docker version 19.03.2, build 6a30dfca03 Login to your DockerHub from CLI 1 docker login","title":"Should output something like:"},{"location":"2019/oracle_12c_docker/#should-launch-a-webrowser-to-auhenticate-your-cli-session","text":"","title":"Should launch a webrowser to auhenticate your CLI session"},{"location":"2019/oracle_12c_docker/#pull-the-oracle-docker-image","text":"Oracle is very strict about it's licensing which is why the Dockerhub account is required. Navigate to https://hub.docker.com/_/oracle-database-enterprise-edition . Click the Proceed To Checkout You'll be prompted to login to Dockerhub if you're not already Carefully read and accept the license(s) if you agree to them. After agreeing to the licenses, you'll be redirected to a page that has the docker pull command to get the image and some setup instructions. Ignore the setup instructions for now and pull the Docker image Pull the Docker Image","title":"Pull the Oracle Docker Image"},{"location":"2019/oracle_12c_docker/#this-is-the-command-at-the-time-of-writing","text":"1 docker pull store/oracle/database-enterprise:12.2.0.1 Verify you have the image 1 docker images | grep oracle store/oracle/database-enterprise 12.2.0.1 12a359cd0528 2 years ago 3.44GB","title":"This is the command at the time of writing"},{"location":"2020/Django/Polls_tutorial/","text":"Personal notes on how Django works Tutorial Part 1: \u00b6 Tutorial Part 2: \u00b6 Tutorial Part 3: \u00b6 When somebody requests a page from your website \u2013 say, \u201c/polls/34/\u201d, Django will load the mysite.urls Python module because it\u2019s pointed to by the ROOT_URLCONF setting. It finds the variable named urlpatterns and traverses the patterns in order. After finding the match at 'polls/', it strips off the matching text (\"polls/\") and sends the remaining text \u2013 \"34/\" \u2013 to the \u2018polls.urls\u2019 URLconf for further processing. There it matches ' /', resulting in a call to the detail() view like so: How django processes a request \u00b6","title":"Django Polls Notes"},{"location":"2020/Django/Polls_tutorial/#tutorial-part-1","text":"","title":"Tutorial Part 1:"},{"location":"2020/Django/Polls_tutorial/#tutorial-part-2","text":"","title":"Tutorial Part 2:"},{"location":"2020/Django/Polls_tutorial/#tutorial-part-3","text":"When somebody requests a page from your website \u2013 say, \u201c/polls/34/\u201d, Django will load the mysite.urls Python module because it\u2019s pointed to by the ROOT_URLCONF setting. It finds the variable named urlpatterns and traverses the patterns in order. After finding the match at 'polls/', it strips off the matching text (\"polls/\") and sends the remaining text \u2013 \"34/\" \u2013 to the \u2018polls.urls\u2019 URLconf for further processing. There it matches ' /', resulting in a call to the detail() view like so:","title":"Tutorial Part 3:"},{"location":"2020/Django/Polls_tutorial/#how-django-processes-a-request","text":"","title":"How django processes a request"},{"location":"2020/Oracle/Documentation_links/","text":"Links to valid documentation for 1Z0-071 \u00b6 Oracle 12c: General \u00b6 Anything you might need to know for the exam can be found in the links below THE SQL REFERENCE Most everything about DDL, DML, Transaction SQL OFFICAL INTERVAL REFERENCE TIME INTERVAL REFERENCE Unofficial Resource I experienced at least a couple questions on inline time intervals that this page seems to cover thoroughly and more succinctly then the official docs PRIVILEGES Should be everything needed for: GRANT / REVOKE SYSTEM / OBJECT SQL*PLUS REFERENCE Very little to know here for the exam. Know about: DESC[CRIBE] ACCEPT VERIFY How to connect: sqlplus sys as sysdba or sqlplus username/password I did not see a single question on anything specific to SQL*PLUS on the exam so just sticking to the UCERTIFY and official resources should be sufficient. EVERYTHING If you can't find what you need in the other links, this should contain links to everything u could possibly need. The PUBLIC role is a special role that every database user account automatically has when the account is created. By default, it has no privileges granted to it, but it does have numerous grants, mostly to Java objects. You cannot drop the PUBLIC role, and a manual grant or revoke of this role has no meaning, because the user account will always assume this role. Because all database user accounts assume the PUBLIC role, it does not appear in the DBA ROLES and SESSION ROLES data dictionary views.","title":"Documentation Links"},{"location":"2020/Oracle/Documentation_links/#links-to-valid-documentation-for-1z0-071","text":"","title":"Links to valid documentation for 1Z0-071"},{"location":"2020/Oracle/Documentation_links/#oracle-12c-general","text":"Anything you might need to know for the exam can be found in the links below THE SQL REFERENCE Most everything about DDL, DML, Transaction SQL OFFICAL INTERVAL REFERENCE TIME INTERVAL REFERENCE Unofficial Resource I experienced at least a couple questions on inline time intervals that this page seems to cover thoroughly and more succinctly then the official docs PRIVILEGES Should be everything needed for: GRANT / REVOKE SYSTEM / OBJECT SQL*PLUS REFERENCE Very little to know here for the exam. Know about: DESC[CRIBE] ACCEPT VERIFY How to connect: sqlplus sys as sysdba or sqlplus username/password I did not see a single question on anything specific to SQL*PLUS on the exam so just sticking to the UCERTIFY and official resources should be sufficient. EVERYTHING If you can't find what you need in the other links, this should contain links to everything u could possibly need. The PUBLIC role is a special role that every database user account automatically has when the account is created. By default, it has no privileges granted to it, but it does have numerous grants, mostly to Java objects. You cannot drop the PUBLIC role, and a manual grant or revoke of this role has no meaning, because the user account will always assume this role. Because all database user accounts assume the PUBLIC role, it does not appear in the DBA ROLES and SESSION ROLES data dictionary views.","title":"Oracle 12c: General"},{"location":"2020/Oracle/post_attempt_1_notes/","text":"Concept \u00b6 Abstract After taking my first C993 exam attempt, I jotted down key areas/concepts from the exam for things which I didn't know or was unsure of. Everything on this page is derived from those notes, so everything here is known to have applications to real-world exam content. Legal Disclaimer I did not write down any questions from the exam. These are general observations that I remember from the exam. I am not reproducing any exam questions here, only covering concepts necessary to answer questions like the ones that I encountered on my first attempt. These writings are my own and do not reflect the opinions of Oracle\u00a9 or WGU\u00a9. How/where COUNT(*) works in different places of a query: \u00b6 Oracle 12c Official COUNT Docs They will try to put COUNT(*) in every conceivable place, of every query. Know how COUNT(*) works: \u00b6 In the SELECT only: Counts every single row in a table, including <null> 's In the GROUP BY : 1 2 3 4 5 6 7 8 9 10 11 12 13 --In the SELECT and HAVING select MGR , COUNT ( * ), COUNT ( EMPNO ) from emp group by MGR HAVING COUNT ( * ) > 3 ; /* Output +----+--------+------------+ |MGR |COUNT(*)|COUNT(EMPNO)| +----+--------+------------+ |NULL|4 |4 | |7698|4 |4 | +----+--------+------------+ */ Merge statements, exact flow where the source and target table can be referenced What is valid WHEN MATCHED , WHEN NOT MATCHED How EXISTS works with an alias to the outer table and no alias for the subquery inner table select 2 from dual a cross join dual b cross join dual c; Multiple single quotes \u00b6 This section might seem a little insane. If you're wondering if it's worth studying this, I had one question from my last attempt that really wanted to make sure you knew how many single quotes, in what order, would create a desired result vs an error. Quote Docs: https://docs.oracle.com/database/121/SQLRF/sql_elements003.htm#i42617 The general flow which I'll explain further in the examples below is: opening single quote to start character string ' process each character when another ' is found: check to see if the following character is also a ' . If it is, process the two quotes as an escaped single quote. If there is no immediate followup quote, process this ' as the closing quote. 4 singles quotes, which ones are escaped? 1 2 select '''' quote_escapes from dual ; QUOTE_ESCAPES ' Breakdown ' ''' The first quote char starts the string. ' '' ' Next, Oracle see's the 2 nd and third singles( '' ). This is processed as an escaped single( ' ). ''' ' Finally, the last quote is processed. It isn't part of a pair, so it closes the string. A single-quote is returned. 2 outer singles hold one escaped single(doubled for escape) 4 singles quotes... again?, which ones are escaped? 1 2 select '' '' quote_escapes from dual ; Result: Error This time no quote escapes are attempted '' '' The first pair is a complete string. It evaluates to <null> though because Oracle doesn't believe in empty strings '' '' The second pair is also a complete string. The problem is that the strings need either a || or concat to be joined Possible Fixes 1 select '' || '' quote_escapes from dual ; 1 select concat ( '' , '' ) quote_escapes from dual ; 1 2 3 4 select ' '' ' quote_escapes from dual ; /* This example returns a single quote. */ 3 singles quotes, which ones are escaped? 1 2 select '' ' quote_escapes from dual ; Result: Error ' '' The first quote char starts the string. ' '' Next Oracle see's the 2 nd and third singles( '' ). This is processed as an escaped single( ' ). Since all thee single quotes have been processed, there is no closing quote. An error results. HAVING before or without GROUP BY ? \u00b6 Note AFAIK these are rarities you will never see outside the exam. However I encountered at least a few questions on my first attempt that had possible answers which included: HAVING before a group by, and HAVING without a GROUP BY . Docs 1 HAVING before a GROUP BY \u00b6 HAVING can become before or after GROUP BY and it has zero impact on your query. The only general requirement is that they each come after the WHERE (if it exists) and before the ORDER BY . AFAIK they are the only two query clauses where the order doesn't matter. HAVING without GROUP BY \u00b6 HAVING can be used without GROUP BY , but it is heavily restricted. If you omit group by , all the rows not excluded by the where clause return as a single group. Since you can only get a single group, you will only ever get a single row as a return. Remember where filters rows, but having filters groups. In this case though, there's only one group to be filtered. So HAVING , in this GROUP BY -less statement will either keep the single row of aggregated output or filter it out. 1 2 3 4 5 6 7 8 9 10 11 FROM ON JOIN WHERE GROUP BY WITH CUBE or WITH ROLLUP HAVING SELECT DISTINCT ORDER BY FETCH 1 2 SELECT MAX ( SAL ), 'wgu' , COUNT ( * ) ct , min ( COMM ) min , median ( deptno ) med from emp ; MAX(SAL) 'WGU' CT MIN MED 5000 wgu 16 0 20 1 2 3 SELECT MAX ( SAL ), 'wgu' , COUNT ( * ) ct , min ( COMM ) min , median ( deptno ) med from emp having avg ( SAL ) > 500 ; Interval Literals \u00b6 Oracle 12c Interval Literals Docs 2 Note Seeking to answer valid ways to specify interval literals. My first attempt had at least a couple questions that tested to see if you knew the exact way to specify time interval literals, what they allowed, and different ways to get the same answer. the exam. How to format the strings that go into Interval literals? Things like: \u00b6 DAY YEAR , AS DAY TO SECOND , as hour to min , as hour to second 12:00 , 12 00 , 12:00:00 ? Interval Precisions Much like other data types, time intervals have default precision values that can't be exceeded by default. INTERVAL literals: YEAR , MONTH , DAY , HOUR , and MINUTE : \u00b6 Warning Note this is precision , which is how many total digits are available for use. Do not confuse this with scale. Min precision: 0 Max Precision: 9 Whole numbers as strings only, no decimals Zeros can precede other digits. Up to a combined 9 ignoring actual precision. More on this below. EACH keyword is NOT plural: ie using DAYS instead of DAY will throw an error INTERVAL literal: SECOND ( HEAVILY differs from the previous INTERVAL literals): \u00b6 Encouraged to read the offical docs on SECOND Get ready for a mind-fuck For the SECOND interval, there are now two possible precisions: leading precision and fractional_seconds_precision leading_precision \u00b6 \"How many digits are available for the whole number\" Default: 7 You won't find this number in any docs, but I tested it, and that's what it is Min: 0 Max: 9 Will never accept more than 9 digits(left of the decimal) regardless of precision INTERVAL '123456789' SECONDS ( 9 ) will work INTERVAL '000000012' SECONDS ( 2 ) will work. Zeros are \"ignored\" against precision INTERVAL '0000000012' SECONDS ( 2 ) won't work. Soft limit on accepting 9 digits The exception to the soft limit of 9 digits is a string of only zeros 1 2 --Allows 60 zeroes before returning bad datetime/interval value error SELECT INTERVAL '0000000000000000000000000000000000000000000000000000000000000' DAY ( 0 ) FROM DUAL ; fractional_seconds_precision \u00b6 Note This parameter is only limiting the total fractional seconds stored in the interval. It is NOT a limit that will cause an error when exceeded. It is NOT like scale for NUMBER ( 7 , 2 ) . The ONLY thing fractional_seconds_precision does, is to limit and round to the number place specified Min precision: 0 ( Official 12c documentation says 1 ) Quote fractional_seconds_precision is the number of digits in the fractional part of the SECOND datetime field. Accepted values are 1 to 9. The default is 6. select INTERVAL '0.123456789' SECOND ( 0 , 0 ) from dual ; works for me on my Oracle 12c 1 2 3 4 5 6 7 8 9 10 11 /* Connected to: Oracle Database 12c Enterprise Edition Release 12.1.0.1.0 - 64bit Production SQL> select INTERVAL '0.123456789' SECOND(0,0) from dual; INTERVAL'0.12345678 ------------------- +00 00:00:00.000000 */ Max Precsion: 9 Can use decimals SECOND Does NOT behave like NUMBER General form is: INTERVAL quoted_number interval type Working Examples 1 2 3 select INTERVAL '5' DAY from dual ; select INTERVAL '5' YEAR from dual ; select INTERVAL '5.555555' from dual ; Example Errors: Almost Correct 1 select INTERVAL '5' MINUTE TO DAY from dual ; Why is this almost correct? Smaller time interval can't come before bigger time-interval 1 select INTERVAL '5.555555' from dual ; Why is this almost correct? Missing the actual INTERVAL type (ie DAY ... SECOND ) Examples: Unintended Output! 1 select '5' day from dual ; Why is the output unintended? The intention appears to get a INTERVAL '5' DAY but without the INTERVAL keyword it's just a NUMBER with a column alias of DAY. Oracle allows this because DAY is a keyword, but not a RESERVED keyword 3 DAY 5 Working conversion functions TO_DSINTERVAL () \u00b6 All values(except microseconds) must have a number even if it's zero: MIN and SECOND : 0-59 HOUR : 0-23 DAY : 0-999999999 Fail 1 2 3 4 5 --These won't work select to_dsinterval ( '1 0::0' ) from dual ; select to_dsinterval ( '1 :0:0' ) from dual ; select to_dsinterval ( '1 0:0:' ) from dual ; select to_dsinterval ( '1:1:1' ) from dual ; If negative, the negative sign must come first 9 digits of precision are available for DAYS , 9 digits of precision are available for MICROSECONDS At least one space must separate days and hours Example: Extra spaces 1 2 3 4 --All works the same select to_dsinterval ( '1 10:50:50' ) from dual ; select to_dsinterval ( '1 10 :50 :50.234234234' ) from dual ; select to_dsinterval ( ' 1 10 : 50 : 50 ' ) from dual ; Extra spaces can't separate a number 1 2 ' 1 23 : 59 : 59 ' --works '1 2 3:5 9:5 9' --doesn't 1 2 3 4 5 6 7 8 select to_dsinterval ( '-123456789 23:59:59.123456789' ) from dual ; /* +---------------------------------------------+ |TO_DSINTERVAL('-12345678923:59:59.123456789')| +---------------------------------------------+ |-123456789 23:59:59.123456789 | +---------------------------------------------+ */ LIKE \u00b6 Official Docs: Like Condition Warning % is a one-to-many wildcard characters. The exception is null . so LIKE '%' will match everything that isn't null or an empty string(which oracle stores as null ) In contrast, underscore( _ ) is NOT a zero-to-one wildcard character. It is exactly a single wildcard character. upper ( '%Mc' ) \u00b6 1 2 3 select ename from emp where ename like upper ( 'smi%' ); ENAME SMITH Errors: Exam watch These are similar to exam questions I remember. They are almost correct by not quite. 1 2 3 select ename from emp where ename like 'SXI%' or 'SMI%' ; 1 2 3 select ename from emp where ename like 'SXI%' or like 'SMI%' ; correct usage of two LIKE on same column 1 2 3 4 select ename from emp where ename like 'SXI%' or ename like 'SMI%' ; 1 2 3 select ename from emp where lower ( ename ) like lower ( 'SMi%' ); Nested aggregations \u00b6 MAX(COUNT(*)) INSTR with a ' ' parameter \u00b6 1 2 3 --Know what an example like this does SELECT INSTR ( empno , ' ' ) FROM EMP ; TODO \u00b6 Note I'm planning to flesh out most/all of the rest of these bullet points into sections with explanations and examples. Some of them are just brief notes to jog my memory and may not make sense to anyone but me. Knowing exactly what can be done to a READ ONLY table Set operators second table datatypes need to match? or be in same group only? adding decimals to a DATE \u00b6 Adding decimal values to a date works precisely. That is, it doesn't round the decimal to a full day 1 2 3 4 5 6 7 8 9 10 11 12 13 14 select to_date ( '02-FEB-20' , 'DD-MON-RR' ), to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 , -- add 1 day to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 / 24 , --add 1 hour to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 / 24 / 60 , --add 1 min to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 / 24 / 60 / 60 , --add 1 sec to_date ( '02-FEB-20' , 'DD-MON-RR' ) + . 1 -- add 2 hours 24 min(2.4hours) from dual ; /* +--------------------------------+----------------------------------+-------------------------------------+----------------------------------------+-------------------------------------------+-------------------------------------------------------------+ |TO_DATE('02-FEB-20','DD-MON-RR')|TO_DATE('02-FEB-20','DD-MON-RR')+1|TO_DATE('02-FEB-20','DD-MON-RR')+1/24|TO_DATE('02-FEB-20','DD-MON-RR')+1/24/60|TO_DATE('02-FEB-20','DD-MON-RR')+1/24/60/60|TO_DATE('02-FEB-20','DD-MON-RR')+.1--ADD2HOURS24MIN(2.4HOURS)| +--------------------------------+----------------------------------+-------------------------------------+----------------------------------------+-------------------------------------------+-------------------------------------------------------------+ |2020-02-02 00:00:00 |2020-02-03 00:00:00 |2020-02-02 01:00:00 |2020-02-02 00:01:00 |2020-02-02 00:00:01 |2020-02-02 02:24:00 | +--------------------------------+----------------------------------+-------------------------------------+----------------------------------------+-------------------------------------------+-------------------------------------------------------------+ */ Full outer with (+)'s Speed of Join speed of between is always faster than >= / <= Can public be revoked? Does every user start with public? Can roles be assigned to roles? sequences create a sequence with the least chance of spaces? Know sequences defaults (cache/nocache) cycle/nocycle etc reaffirm which grants (system/object) are retained after a revoke requirements of an ERD with a many-to-many, ie students that can have many teachers, and teachers can have many students. when referring to ERD's are primary keys relevant? reaffirm index's are only created on unique and primary keys? requirements to insert, update delete from a view. Are the different? global temporary tables. General knowledge and: When they are created: Session start? different time how actions from different sessions affect the table. can different users/sessions see other users/session versions of the table? virtual columns: general knowledge TO_CHAR with numbers: does it truncate/round/floor decimals? '$1,000' 2324.434 => ? how does it work with numbers bigger than its format? '$1,000' 334234 => ? How Distinct acts in aggregations learn coalesce first non-null expression in list Know all the different nuances of HAVING : it CAN come before GROUP BY it CAN be used without GROUP BY Reference https://docs.oracle.com/javadb/10.8.3.0/ref/rrefsqlj14854.html General Notes \u00b6 Speed is important. I ran out of time, only getting 60/78 done The queries are very often not formatted, just one long line, no syntax highlighting. Exceptions are queries using MERGE . SET operators You have the ability to right click answers you think are wrong as a visual aid to yourself. Potentially helpful, but be able careful of discounting a a choice like this if you are struggling to find the answer after Don't bother using the \"mark for later\" you won't have time to go back Questions seem to be mostly choose the two/three answers that will will execute correctly Knowing two or three different ways to accomplish the same task is important since many questions are: which two/three of these have the same result Very few ERD diagrams (only 1 or two questions that I can remember) different queries to get the same result Thanks \u00b6 Great thanks to my fellow C993 students and all contributors to the fabled \"powerpoint slides\". With the scarcity of content on the 2019 October exam changes, the slides have been a critical resource for me to study from. The WGU C993 Slack group. Contributing \u00b6 If you like this document and want to contribute(spelling, grammar, content, suggestions, etc) I welcome anyone wanting to contribute directly or indirectly. Currently this project is rolled into my \"blog\" but if there's interest I may migrate it elsewhere. If you want to contribute to the page directly you can edit the markdown the page it's generated from here . It's written in markdown that that has some extensions from Material for mkDocs , so it's hopefully fairly intuitive to edit. After submitting someone just needs to approve the change and the site should get rebuilt automatically. If you have some experience with git, github, and markdown and want to be added as a repo collaborator who can approve content changes/updates contact me via email or on our slack wgu sql. Or if you prefer just leave a comment in the comment section below. https://docs.oracle.com/database/121/SQLRF/statements_10002.htm#i2078943 \u21a9 Inline Intervals: https://www.oracletutorial.com/oracle-basics/oracle-interval/ \u21a9 Reserved Keywords: https://docs.oracle.com/database/121/SQLRF/ap_keywd001.htm#SQLRF55621 \u21a9","title":"First attempt notes"},{"location":"2020/Oracle/post_attempt_1_notes/#concept","text":"Abstract After taking my first C993 exam attempt, I jotted down key areas/concepts from the exam for things which I didn't know or was unsure of. Everything on this page is derived from those notes, so everything here is known to have applications to real-world exam content. Legal Disclaimer I did not write down any questions from the exam. These are general observations that I remember from the exam. I am not reproducing any exam questions here, only covering concepts necessary to answer questions like the ones that I encountered on my first attempt. These writings are my own and do not reflect the opinions of Oracle\u00a9 or WGU\u00a9.","title":"Concept"},{"location":"2020/Oracle/post_attempt_1_notes/#howwhere-count-works-in-different-places-of-a-query","text":"Oracle 12c Official COUNT Docs They will try to put COUNT(*) in every conceivable place, of every query.","title":"How/where COUNT(*) works in different places of a query:"},{"location":"2020/Oracle/post_attempt_1_notes/#know-how-count-works","text":"In the SELECT only: Counts every single row in a table, including <null> 's In the GROUP BY : 1 2 3 4 5 6 7 8 9 10 11 12 13 --In the SELECT and HAVING select MGR , COUNT ( * ), COUNT ( EMPNO ) from emp group by MGR HAVING COUNT ( * ) > 3 ; /* Output +----+--------+------------+ |MGR |COUNT(*)|COUNT(EMPNO)| +----+--------+------------+ |NULL|4 |4 | |7698|4 |4 | +----+--------+------------+ */ Merge statements, exact flow where the source and target table can be referenced What is valid WHEN MATCHED , WHEN NOT MATCHED How EXISTS works with an alias to the outer table and no alias for the subquery inner table select 2 from dual a cross join dual b cross join dual c;","title":"Know how COUNT(*) works:"},{"location":"2020/Oracle/post_attempt_1_notes/#multiple-single-quotes","text":"This section might seem a little insane. If you're wondering if it's worth studying this, I had one question from my last attempt that really wanted to make sure you knew how many single quotes, in what order, would create a desired result vs an error. Quote Docs: https://docs.oracle.com/database/121/SQLRF/sql_elements003.htm#i42617 The general flow which I'll explain further in the examples below is: opening single quote to start character string ' process each character when another ' is found: check to see if the following character is also a ' . If it is, process the two quotes as an escaped single quote. If there is no immediate followup quote, process this ' as the closing quote. 4 singles quotes, which ones are escaped? 1 2 select '''' quote_escapes from dual ; QUOTE_ESCAPES ' Breakdown ' ''' The first quote char starts the string. ' '' ' Next, Oracle see's the 2 nd and third singles( '' ). This is processed as an escaped single( ' ). ''' ' Finally, the last quote is processed. It isn't part of a pair, so it closes the string. A single-quote is returned. 2 outer singles hold one escaped single(doubled for escape) 4 singles quotes... again?, which ones are escaped? 1 2 select '' '' quote_escapes from dual ; Result: Error This time no quote escapes are attempted '' '' The first pair is a complete string. It evaluates to <null> though because Oracle doesn't believe in empty strings '' '' The second pair is also a complete string. The problem is that the strings need either a || or concat to be joined Possible Fixes 1 select '' || '' quote_escapes from dual ; 1 select concat ( '' , '' ) quote_escapes from dual ; 1 2 3 4 select ' '' ' quote_escapes from dual ; /* This example returns a single quote. */ 3 singles quotes, which ones are escaped? 1 2 select '' ' quote_escapes from dual ; Result: Error ' '' The first quote char starts the string. ' '' Next Oracle see's the 2 nd and third singles( '' ). This is processed as an escaped single( ' ). Since all thee single quotes have been processed, there is no closing quote. An error results.","title":"Multiple single quotes"},{"location":"2020/Oracle/post_attempt_1_notes/#having-before-or-without-group-by","text":"Note AFAIK these are rarities you will never see outside the exam. However I encountered at least a few questions on my first attempt that had possible answers which included: HAVING before a group by, and HAVING without a GROUP BY . Docs 1","title":"HAVING before or without  GROUP BY?"},{"location":"2020/Oracle/post_attempt_1_notes/#having-before-a-group-by","text":"HAVING can become before or after GROUP BY and it has zero impact on your query. The only general requirement is that they each come after the WHERE (if it exists) and before the ORDER BY . AFAIK they are the only two query clauses where the order doesn't matter.","title":"HAVING before a GROUP BY"},{"location":"2020/Oracle/post_attempt_1_notes/#having-without-group-by","text":"HAVING can be used without GROUP BY , but it is heavily restricted. If you omit group by , all the rows not excluded by the where clause return as a single group. Since you can only get a single group, you will only ever get a single row as a return. Remember where filters rows, but having filters groups. In this case though, there's only one group to be filtered. So HAVING , in this GROUP BY -less statement will either keep the single row of aggregated output or filter it out. 1 2 3 4 5 6 7 8 9 10 11 FROM ON JOIN WHERE GROUP BY WITH CUBE or WITH ROLLUP HAVING SELECT DISTINCT ORDER BY FETCH 1 2 SELECT MAX ( SAL ), 'wgu' , COUNT ( * ) ct , min ( COMM ) min , median ( deptno ) med from emp ; MAX(SAL) 'WGU' CT MIN MED 5000 wgu 16 0 20 1 2 3 SELECT MAX ( SAL ), 'wgu' , COUNT ( * ) ct , min ( COMM ) min , median ( deptno ) med from emp having avg ( SAL ) > 500 ;","title":"HAVING without GROUP BY"},{"location":"2020/Oracle/post_attempt_1_notes/#interval-literals","text":"Oracle 12c Interval Literals Docs 2 Note Seeking to answer valid ways to specify interval literals. My first attempt had at least a couple questions that tested to see if you knew the exact way to specify time interval literals, what they allowed, and different ways to get the same answer. the exam.","title":"Interval Literals"},{"location":"2020/Oracle/post_attempt_1_notes/#how-to-format-the-strings-that-go-into-interval-literals-things-like","text":"DAY YEAR , AS DAY TO SECOND , as hour to min , as hour to second 12:00 , 12 00 , 12:00:00 ? Interval Precisions Much like other data types, time intervals have default precision values that can't be exceeded by default.","title":"How to format the strings that go into Interval literals? Things like:"},{"location":"2020/Oracle/post_attempt_1_notes/#interval-literals-year-month-day-hour-and-minute","text":"Warning Note this is precision , which is how many total digits are available for use. Do not confuse this with scale. Min precision: 0 Max Precision: 9 Whole numbers as strings only, no decimals Zeros can precede other digits. Up to a combined 9 ignoring actual precision. More on this below. EACH keyword is NOT plural: ie using DAYS instead of DAY will throw an error","title":"INTERVAL literals: YEAR, MONTH, DAY, HOUR, and MINUTE:"},{"location":"2020/Oracle/post_attempt_1_notes/#interval-literal-second-heavily-differs-from-the-previous-interval-literals","text":"Encouraged to read the offical docs on SECOND Get ready for a mind-fuck For the SECOND interval, there are now two possible precisions: leading precision and fractional_seconds_precision","title":"INTERVAL literal: SECOND ( HEAVILY differs from the previous INTERVAL literals):"},{"location":"2020/Oracle/post_attempt_1_notes/#leading_precision","text":"\"How many digits are available for the whole number\" Default: 7 You won't find this number in any docs, but I tested it, and that's what it is Min: 0 Max: 9 Will never accept more than 9 digits(left of the decimal) regardless of precision INTERVAL '123456789' SECONDS ( 9 ) will work INTERVAL '000000012' SECONDS ( 2 ) will work. Zeros are \"ignored\" against precision INTERVAL '0000000012' SECONDS ( 2 ) won't work. Soft limit on accepting 9 digits The exception to the soft limit of 9 digits is a string of only zeros 1 2 --Allows 60 zeroes before returning bad datetime/interval value error SELECT INTERVAL '0000000000000000000000000000000000000000000000000000000000000' DAY ( 0 ) FROM DUAL ;","title":"leading_precision"},{"location":"2020/Oracle/post_attempt_1_notes/#fractional_seconds_precision","text":"Note This parameter is only limiting the total fractional seconds stored in the interval. It is NOT a limit that will cause an error when exceeded. It is NOT like scale for NUMBER ( 7 , 2 ) . The ONLY thing fractional_seconds_precision does, is to limit and round to the number place specified Min precision: 0 ( Official 12c documentation says 1 ) Quote fractional_seconds_precision is the number of digits in the fractional part of the SECOND datetime field. Accepted values are 1 to 9. The default is 6. select INTERVAL '0.123456789' SECOND ( 0 , 0 ) from dual ; works for me on my Oracle 12c 1 2 3 4 5 6 7 8 9 10 11 /* Connected to: Oracle Database 12c Enterprise Edition Release 12.1.0.1.0 - 64bit Production SQL> select INTERVAL '0.123456789' SECOND(0,0) from dual; INTERVAL'0.12345678 ------------------- +00 00:00:00.000000 */ Max Precsion: 9 Can use decimals SECOND Does NOT behave like NUMBER General form is: INTERVAL quoted_number interval type Working Examples 1 2 3 select INTERVAL '5' DAY from dual ; select INTERVAL '5' YEAR from dual ; select INTERVAL '5.555555' from dual ; Example Errors: Almost Correct 1 select INTERVAL '5' MINUTE TO DAY from dual ; Why is this almost correct? Smaller time interval can't come before bigger time-interval 1 select INTERVAL '5.555555' from dual ; Why is this almost correct? Missing the actual INTERVAL type (ie DAY ... SECOND ) Examples: Unintended Output! 1 select '5' day from dual ; Why is the output unintended? The intention appears to get a INTERVAL '5' DAY but without the INTERVAL keyword it's just a NUMBER with a column alias of DAY. Oracle allows this because DAY is a keyword, but not a RESERVED keyword 3 DAY 5 Working conversion functions","title":"fractional_seconds_precision"},{"location":"2020/Oracle/post_attempt_1_notes/#to_dsinterval","text":"All values(except microseconds) must have a number even if it's zero: MIN and SECOND : 0-59 HOUR : 0-23 DAY : 0-999999999 Fail 1 2 3 4 5 --These won't work select to_dsinterval ( '1 0::0' ) from dual ; select to_dsinterval ( '1 :0:0' ) from dual ; select to_dsinterval ( '1 0:0:' ) from dual ; select to_dsinterval ( '1:1:1' ) from dual ; If negative, the negative sign must come first 9 digits of precision are available for DAYS , 9 digits of precision are available for MICROSECONDS At least one space must separate days and hours Example: Extra spaces 1 2 3 4 --All works the same select to_dsinterval ( '1 10:50:50' ) from dual ; select to_dsinterval ( '1 10 :50 :50.234234234' ) from dual ; select to_dsinterval ( ' 1 10 : 50 : 50 ' ) from dual ; Extra spaces can't separate a number 1 2 ' 1 23 : 59 : 59 ' --works '1 2 3:5 9:5 9' --doesn't 1 2 3 4 5 6 7 8 select to_dsinterval ( '-123456789 23:59:59.123456789' ) from dual ; /* +---------------------------------------------+ |TO_DSINTERVAL('-12345678923:59:59.123456789')| +---------------------------------------------+ |-123456789 23:59:59.123456789 | +---------------------------------------------+ */","title":"TO_DSINTERVAL()"},{"location":"2020/Oracle/post_attempt_1_notes/#like","text":"Official Docs: Like Condition Warning % is a one-to-many wildcard characters. The exception is null . so LIKE '%' will match everything that isn't null or an empty string(which oracle stores as null ) In contrast, underscore( _ ) is NOT a zero-to-one wildcard character. It is exactly a single wildcard character.","title":"LIKE"},{"location":"2020/Oracle/post_attempt_1_notes/#uppermc","text":"1 2 3 select ename from emp where ename like upper ( 'smi%' ); ENAME SMITH Errors: Exam watch These are similar to exam questions I remember. They are almost correct by not quite. 1 2 3 select ename from emp where ename like 'SXI%' or 'SMI%' ; 1 2 3 select ename from emp where ename like 'SXI%' or like 'SMI%' ; correct usage of two LIKE on same column 1 2 3 4 select ename from emp where ename like 'SXI%' or ename like 'SMI%' ; 1 2 3 select ename from emp where lower ( ename ) like lower ( 'SMi%' );","title":"upper(&#39;%Mc&#39;)"},{"location":"2020/Oracle/post_attempt_1_notes/#nested-aggregations","text":"MAX(COUNT(*))","title":"Nested aggregations"},{"location":"2020/Oracle/post_attempt_1_notes/#instr-with-a-parameter","text":"1 2 3 --Know what an example like this does SELECT INSTR ( empno , ' ' ) FROM EMP ;","title":"INSTR with a ' ' parameter"},{"location":"2020/Oracle/post_attempt_1_notes/#todo","text":"Note I'm planning to flesh out most/all of the rest of these bullet points into sections with explanations and examples. Some of them are just brief notes to jog my memory and may not make sense to anyone but me. Knowing exactly what can be done to a READ ONLY table Set operators second table datatypes need to match? or be in same group only?","title":"TODO"},{"location":"2020/Oracle/post_attempt_1_notes/#adding-decimals-to-a-date","text":"Adding decimal values to a date works precisely. That is, it doesn't round the decimal to a full day 1 2 3 4 5 6 7 8 9 10 11 12 13 14 select to_date ( '02-FEB-20' , 'DD-MON-RR' ), to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 , -- add 1 day to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 / 24 , --add 1 hour to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 / 24 / 60 , --add 1 min to_date ( '02-FEB-20' , 'DD-MON-RR' ) + 1 / 24 / 60 / 60 , --add 1 sec to_date ( '02-FEB-20' , 'DD-MON-RR' ) + . 1 -- add 2 hours 24 min(2.4hours) from dual ; /* +--------------------------------+----------------------------------+-------------------------------------+----------------------------------------+-------------------------------------------+-------------------------------------------------------------+ |TO_DATE('02-FEB-20','DD-MON-RR')|TO_DATE('02-FEB-20','DD-MON-RR')+1|TO_DATE('02-FEB-20','DD-MON-RR')+1/24|TO_DATE('02-FEB-20','DD-MON-RR')+1/24/60|TO_DATE('02-FEB-20','DD-MON-RR')+1/24/60/60|TO_DATE('02-FEB-20','DD-MON-RR')+.1--ADD2HOURS24MIN(2.4HOURS)| +--------------------------------+----------------------------------+-------------------------------------+----------------------------------------+-------------------------------------------+-------------------------------------------------------------+ |2020-02-02 00:00:00 |2020-02-03 00:00:00 |2020-02-02 01:00:00 |2020-02-02 00:01:00 |2020-02-02 00:00:01 |2020-02-02 02:24:00 | +--------------------------------+----------------------------------+-------------------------------------+----------------------------------------+-------------------------------------------+-------------------------------------------------------------+ */ Full outer with (+)'s Speed of Join speed of between is always faster than >= / <= Can public be revoked? Does every user start with public? Can roles be assigned to roles? sequences create a sequence with the least chance of spaces? Know sequences defaults (cache/nocache) cycle/nocycle etc reaffirm which grants (system/object) are retained after a revoke requirements of an ERD with a many-to-many, ie students that can have many teachers, and teachers can have many students. when referring to ERD's are primary keys relevant? reaffirm index's are only created on unique and primary keys? requirements to insert, update delete from a view. Are the different? global temporary tables. General knowledge and: When they are created: Session start? different time how actions from different sessions affect the table. can different users/sessions see other users/session versions of the table? virtual columns: general knowledge TO_CHAR with numbers: does it truncate/round/floor decimals? '$1,000' 2324.434 => ? how does it work with numbers bigger than its format? '$1,000' 334234 => ? How Distinct acts in aggregations learn coalesce first non-null expression in list Know all the different nuances of HAVING : it CAN come before GROUP BY it CAN be used without GROUP BY Reference https://docs.oracle.com/javadb/10.8.3.0/ref/rrefsqlj14854.html","title":"adding decimals to a DATE"},{"location":"2020/Oracle/post_attempt_1_notes/#general-notes","text":"Speed is important. I ran out of time, only getting 60/78 done The queries are very often not formatted, just one long line, no syntax highlighting. Exceptions are queries using MERGE . SET operators You have the ability to right click answers you think are wrong as a visual aid to yourself. Potentially helpful, but be able careful of discounting a a choice like this if you are struggling to find the answer after Don't bother using the \"mark for later\" you won't have time to go back Questions seem to be mostly choose the two/three answers that will will execute correctly Knowing two or three different ways to accomplish the same task is important since many questions are: which two/three of these have the same result Very few ERD diagrams (only 1 or two questions that I can remember) different queries to get the same result","title":"General Notes"},{"location":"2020/Oracle/post_attempt_1_notes/#thanks","text":"Great thanks to my fellow C993 students and all contributors to the fabled \"powerpoint slides\". With the scarcity of content on the 2019 October exam changes, the slides have been a critical resource for me to study from. The WGU C993 Slack group.","title":"Thanks"},{"location":"2020/Oracle/post_attempt_1_notes/#contributing","text":"If you like this document and want to contribute(spelling, grammar, content, suggestions, etc) I welcome anyone wanting to contribute directly or indirectly. Currently this project is rolled into my \"blog\" but if there's interest I may migrate it elsewhere. If you want to contribute to the page directly you can edit the markdown the page it's generated from here . It's written in markdown that that has some extensions from Material for mkDocs , so it's hopefully fairly intuitive to edit. After submitting someone just needs to approve the change and the site should get rebuilt automatically. If you have some experience with git, github, and markdown and want to be added as a repo collaborator who can approve content changes/updates contact me via email or on our slack wgu sql. Or if you prefer just leave a comment in the comment section below. https://docs.oracle.com/database/121/SQLRF/statements_10002.htm#i2078943 \u21a9 Inline Intervals: https://www.oracletutorial.com/oracle-basics/oracle-interval/ \u21a9 Reserved Keywords: https://docs.oracle.com/database/121/SQLRF/ap_keywd001.htm#SQLRF55621 \u21a9","title":"Contributing"}]}